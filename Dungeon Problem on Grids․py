def dungeon(grid):
    rows = len(grid)
    cols = len(grid[0])

    dp = [[0] * cols for _ in range(rows)]

    dp[rows - 1][cols - 1] = max(1, 1 - grid[rows - 1][cols - 1])

    for i in range(rows - 2, -1, -1):
        dp[i][cols - 1] = max(1, dp[i + 1][cols - 1] - grid[i][cols - 1])

    for j in range(cols - 2, -1, -1):
        dp[rows - 1][j] = max(1, dp[rows - 1][j + 1] - grid[rows - 1][j])

    for i in range(rows - 2, -1, -1):
        for j in range(cols - 2, -1, -1):
            min_health = min(dp[i + 1][j], dp[i][j + 1])
            dp[i][j] = max(1, min_health - grid[i][j])

    return dp[0][0]

grid = [
    [-2, -3, 3],
    [-5, -10, 1],
    [10, 30, -5]
]

print(dungeon(grid))
